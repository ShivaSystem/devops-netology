1. Команда cd - это встроенная команда linux. А встроенная по всей видимости потому что в любом случае нужен будет функционал
перемещения по каталогам.
2. grep -c <some_string> <some_file> эта команда также покажет количество строк с совпадениями.
3. PID 1 это systemd
4. ls abrakadabra 2>/dev/pts/1      -     abrakadabra написана для того чтобы получить ошибку
5. cat < Vagrantfile > vagrant_test
6. # ls -l 1>/dev/tty2 данной конструкцией можно перенаправить stdout на tty2, наблюдать вывод в realtime режиме не получится, а вот посмотреть что получилось можно если переключиться на tty2 (ctrl+alt+F2)
   Можно также например перехватить весь stdin
   # tee</dev/pts/3 > /dev/tty2  В данном примере рассматривал ситуацию что моя сессия pts/2, а на хосте есть также ssh сессиия pts/3, и ее stdin перенаправляется на tty2
   (Если Вас не затруднит прошу подсказать, как перенаправить только stdout pts/3 например в tty2)
7. Команда bash 5>&1, создает и сопоставляет декстриптор 5 с stdout (задает по умолчанию перенаправление вывода на stdout). Поэтому при выполнении echo netology > /proc/$$/fd/5, весь вывод "echo netology" перенаправляется на файловый декстриптор 5, а с него на stdout
8. bash 5>&2 (перенаправляет с дескриптора 5 на stderr)
ls asd 2>&1 1>&5 | cat > /dev/pts/4 (stderr перенаправляется на stdout, а stdout на &5 который перенаправляет на stderr, что в свою очередь дает результат что на pipe попадает только stderr и отправляется в pts/4)
 Пример работы показан на рисунке Term2_Приложение1.png
9. cat /proc/$$/environ вывод переменные окружения. Для получения аналогичного по содержанию вывода можно выполнить env
10. /proc/<PID>/cmdline Этот доступный только для чтения файл содержит полную командную строку для процесса, если только 
процесс не является зомби. В последнем случае в этом файле ничего нет: то есть чтение этого файла вернет 0 символов. 
Аргументы командной строки появляются в этом файле как набор строк, разделенных нулевыми байтами ('\ 0'), с последующим 
нулевым байтом после последней строки.
    /proc/<PID>/exe это симлинк на исполняемую команду или программу.
11. model name      : Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz SSE 4_2
12. Данный вывод возникает из-за того, что при  удаленном выполнении команды на удаленном хосте не выделяется pty на сессию. Поэтому и вывод такой. Решить можно если использовать опцию -t. 
Команда будет выглядеть так: ssh -t localhost 'tty'
И вывод этой команды: /dev/pts/3
		      Connection to localhost closed.
14. sudo tee будет работать потому, что tee запускается от рута и читает стандартный ввод и передает на stdout или пишет в файл, в нашем случае пишет в файл /root/new_file.
